//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceClientProj1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IConverterService")]
    public interface IConverterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/Calc_bmi", ReplyAction="http://tempuri.org/IConverterService/Calc_bmiResponse")]
        string Calc_bmi(double weight, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/Calc_bmi", ReplyAction="http://tempuri.org/IConverterService/Calc_bmiResponse")]
        System.Threading.Tasks.Task<string> Calc_bmiAsync(double weight, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertTemperature", ReplyAction="http://tempuri.org/IConverterService/ConvertTemperatureResponse")]
        string ConvertTemperature(int from, int to, double temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertTemperature", ReplyAction="http://tempuri.org/IConverterService/ConvertTemperatureResponse")]
        System.Threading.Tasks.Task<string> ConvertTemperatureAsync(int from, int to, double temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertLength", ReplyAction="http://tempuri.org/IConverterService/ConvertLengthResponse")]
        string ConvertLength(int from, int to, double length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertLength", ReplyAction="http://tempuri.org/IConverterService/ConvertLengthResponse")]
        System.Threading.Tasks.Task<string> ConvertLengthAsync(int from, int to, double length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertMass", ReplyAction="http://tempuri.org/IConverterService/ConvertMassResponse")]
        string ConvertMass(int from, int to, double mass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertMass", ReplyAction="http://tempuri.org/IConverterService/ConvertMassResponse")]
        System.Threading.Tasks.Task<string> ConvertMassAsync(int from, int to, double mass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertEnergy", ReplyAction="http://tempuri.org/IConverterService/ConvertEnergyResponse")]
        string ConvertEnergy(int from, int to, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/ConvertEnergy", ReplyAction="http://tempuri.org/IConverterService/ConvertEnergyResponse")]
        System.Threading.Tasks.Task<string> ConvertEnergyAsync(int from, int to, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/Calc_Interest", ReplyAction="http://tempuri.org/IConverterService/Calc_InterestResponse")]
        string Calc_Interest(double prinAmt, double rate, double year, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/Calc_Interest", ReplyAction="http://tempuri.org/IConverterService/Calc_InterestResponse")]
        System.Threading.Tasks.Task<string> Calc_InterestAsync(double prinAmt, double rate, double year, int type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConverterServiceChannel : WcfServiceClientProj1.ServiceReference1.IConverterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConverterServiceClient : System.ServiceModel.ClientBase<WcfServiceClientProj1.ServiceReference1.IConverterService>, WcfServiceClientProj1.ServiceReference1.IConverterService {
        
        public ConverterServiceClient() {
        }
        
        public ConverterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConverterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConverterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConverterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Calc_bmi(double weight, double height) {
            return base.Channel.Calc_bmi(weight, height);
        }
        
        public System.Threading.Tasks.Task<string> Calc_bmiAsync(double weight, double height) {
            return base.Channel.Calc_bmiAsync(weight, height);
        }
        
        public string ConvertTemperature(int from, int to, double temp) {
            return base.Channel.ConvertTemperature(from, to, temp);
        }
        
        public System.Threading.Tasks.Task<string> ConvertTemperatureAsync(int from, int to, double temp) {
            return base.Channel.ConvertTemperatureAsync(from, to, temp);
        }
        
        public string ConvertLength(int from, int to, double length) {
            return base.Channel.ConvertLength(from, to, length);
        }
        
        public System.Threading.Tasks.Task<string> ConvertLengthAsync(int from, int to, double length) {
            return base.Channel.ConvertLengthAsync(from, to, length);
        }
        
        public string ConvertMass(int from, int to, double mass) {
            return base.Channel.ConvertMass(from, to, mass);
        }
        
        public System.Threading.Tasks.Task<string> ConvertMassAsync(int from, int to, double mass) {
            return base.Channel.ConvertMassAsync(from, to, mass);
        }
        
        public string ConvertEnergy(int from, int to, double amount) {
            return base.Channel.ConvertEnergy(from, to, amount);
        }
        
        public System.Threading.Tasks.Task<string> ConvertEnergyAsync(int from, int to, double amount) {
            return base.Channel.ConvertEnergyAsync(from, to, amount);
        }
        
        public string Calc_Interest(double prinAmt, double rate, double year, int type) {
            return base.Channel.Calc_Interest(prinAmt, rate, year, type);
        }
        
        public System.Threading.Tasks.Task<string> Calc_InterestAsync(double prinAmt, double rate, double year, int type) {
            return base.Channel.Calc_InterestAsync(prinAmt, rate, year, type);
        }
    }
}
